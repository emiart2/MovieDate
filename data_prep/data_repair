from google import genai
import pandas as pd
import csv
import io
import os

MODEL = "gemini-2.0-flash"

client = genai.Client(api_key="AIzaSyDahtdFQjNiFP2QfHifgD81HfL5YKRrYis")

# Load the data
data = pd.read_csv('data/completed_netflix.csv')

# Open CSV file for writing
with open('data/data_polish.csv', 'w', newline='', encoding='utf-8') as csvfile:
    writer = csv.writer(csvfile)
    # Write header
    writer.writerow(['name', 'author', 'year', 'genre', 'key_words'])
    
    # Process data in batches of 20
    batch_size = 20
    total_rows = len(data)
    
    for i in range(0, total_rows, batch_size):
        batch_data = data.iloc[i:i+batch_size]
        
        # Create batch prompt
        batch_text = ""
        for idx, row in batch_data.iterrows():
            batch_text += f"Row {idx}: {row.to_string()}\n\n"
        
        prompt = f"""Przeanalizuj poni≈ºsze dane i wyciƒÖgnij informacje o filmach (nie serialach TV). 
        Dla ka≈ºdego filmu podaj: tytu≈Ç, re≈ºyser, rok, gatunek, s≈Çowa kluczowe.
        
        Dane do analizy:
        {batch_text}
        
        Zasady:
        1. Je≈õli to serial TV - pomi≈Ñ (nie zwracaj odpowiedzi)
        2. Je≈õli to film - zwr√≥ƒá dane w formacie CSV
        3. Wszystkie odpowiedzi w jƒôzyku polskim
        4. Gatunki oddzielone ≈õrednikiem (;)
        5. S≈Çowa kluczowe oddzielone ≈õrednikiem (;) - podaj 30-50 kluczowych s≈Ç√≥w opisujƒÖcych fabu≈Çƒô, postacie lub motywy filmu
        
        Format odpowiedzi (dla ka≈ºdego filmu w nowej linii):
        "Tytu≈Ç","Re≈ºyser",Rok,"Gatunek1;Gatunek2","S≈Çowo1;S≈Çowo2;S≈Çowo3"
        
        Przyk≈Çad:
        "Matrix","Wachowski Sisters",1999,"Action;Sci-Fi","Neo;Morpheus;Trinity;Wirtualna rzeczywisto≈õƒá;Rewolucja"
        "Incepcja","Christopher Nolan",2010,"Sci-Fi;Thriller","Sen;Architekt;Totem;Limbo;Ekstrakcja"
        
        Zwr√≥ƒá tylko dane w formacie CSV, bez dodatkowych komentarzy."""
        
        try:
            response = client.models.generate_content(
                model=MODEL,
                contents=[prompt]
            )
            response_text = response.text
            print(f"\nüîç Batch {i//batch_size + 1} - Raw response:")
            print(f"Response length: {len(response_text) if response_text else 0}")
            print(f"Response preview: {response_text[:200] if response_text else 'None'}")
            
            if response_text:
                response_text = response_text.strip()
                
                # Use csv.reader to properly parse the response
                csv_reader = csv.reader(io.StringIO(response_text))
                
                for row in csv_reader:
                    if len(row) >= 5:
                        name = row[0].strip()
                        author = row[1].strip()
                        year = row[2].strip()
                        genre = row[3].strip()
                        key_words = row[4].strip()
                        
                        # Only process if it's not empty and not null
                        if name and name.lower() != 'null':
                            writer.writerow([name, author, year, genre, key_words])
                            print(f"‚úÖ Processed: {name}")
                    else:
                        print(f"‚ùå Invalid row format: {row}")
            
            print(f"üìä Processed batch {i//batch_size + 1}/{(total_rows + batch_size - 1)//batch_size}")
            
        except Exception as e:
            print(f"‚ùå Error processing batch {i//batch_size + 1}: {e}")

print("üéâ Data processing completed!")